service: gateway

useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: '20201221'
  memorySize: 256
  region: us-east-1
  apiGateway:
    shouldStartNameWithService: true
  stage: ${env:NODE_ENV}
  environment:
    NODE_ENV: ${env:COGNITO_ARN}
    COGNITO_AUTHORIZATION: ${env:COGNITO_AUTHORIZATION}
    COGNITO_URL: ${env:COGNITO_URL}
    REDIS_PORT: ${env:REDIS_PORT}
    REDIS_HOST: ${env:REDIS_HOST}
    REDIS_PASSWORD: ${env:REDIS_PASSWORD}
    SHOPEE_SERVICE_URL: ${env:SHOPEE_SERVICE_URL}
    MELI_SERVICE_URL: ${env:MELI_SERVICE_URL}
  
functions:
  hello:
    handler: dist/src/handlers/index.hello
    events:
      - http:
          method: GET
          path: /hello
          # authorizer:
          #   arn: ${env:COGNITO_ARN}
          #   scopes:
          #     - ${env:COGNITO_SCOPES}

  searchproducts:
    handler: dist/src/handlers/index.searchproducts
    events:
      - http:
          method: GET
          path: /products
          request:
            parameters:
              querystrings:
                product: true
          # authorizer:
          #   arn: ${env:COGNITO_ARN}
          #   scopes:
          #     - ${env:COGNITO_SCOPES}

custom:
  serverless-offline:
    httpPort: 3000
    websocketPort: 3001
    lambdaPort: 3002
  bundle:
    linting: false

plugins:
  - serverless-offline
